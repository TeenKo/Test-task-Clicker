using System.Collections.Generic;
using Entitas;
using UnityEngine;

namespace Core.Input
{
    public sealed class JoystickRefreshAxisSystem : ReactiveSystem<GameEntity>
    {
        public JoystickRefreshAxisSystem(IContext<GameEntity> context) : base(context)
        {
        }

        protected override ICollector<GameEntity> GetTrigger(IContext<GameEntity> context)
        {
            return context.CreateCollector(GameMatcher.JoystickInput);
        }

        protected override bool Filter(GameEntity entity)
        {
            return entity.isStaticJoystick;
        }

        protected override void Execute(List<GameEntity> entities)
        {
            foreach (var gamePadEntity in entities)
            {
                var input = gamePadEntity.joystickInput.value;
                var axisOptions = gamePadEntity.joystickAxisOptions.value;
                var snapX = gamePadEntity.joystickSnapX.value;
                var snapY = gamePadEntity.joystickSnapY.value;

                var horizontal = snapX ? JoystickTools.SnapFloat(input.x, input, axisOptions, AxisOptions.Horizontal) : input.x;
                var vertical = snapY ? JoystickTools.SnapFloat(input.y, input, axisOptions, AxisOptions.Vertical) : input.y;
                var direction = new Vector2(horizontal, vertical);

                gamePadEntity.ReplaceJoystickHorizontalAxis(horizontal);
                gamePadEntity.ReplaceJoystickVerticalAxis(vertical);
                gamePadEntity.ReplaceJoystickDirection(direction);
            }
        }
    }
}