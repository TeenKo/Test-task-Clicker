//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public UserDataGameLevelProgressListenerComponent userDataGameLevelProgressListener { get { return (UserDataGameLevelProgressListenerComponent)GetComponent(GameComponentsLookup.UserDataGameLevelProgressListener); } }
    public bool hasUserDataGameLevelProgressListener { get { return HasComponent(GameComponentsLookup.UserDataGameLevelProgressListener); } }

    public void AddUserDataGameLevelProgressListener(System.Collections.Generic.List<IUserDataGameLevelProgressListener> newValue) {
        var index = GameComponentsLookup.UserDataGameLevelProgressListener;
        var component = (UserDataGameLevelProgressListenerComponent)CreateComponent(index, typeof(UserDataGameLevelProgressListenerComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceUserDataGameLevelProgressListener(System.Collections.Generic.List<IUserDataGameLevelProgressListener> newValue) {
        var index = GameComponentsLookup.UserDataGameLevelProgressListener;
        var component = (UserDataGameLevelProgressListenerComponent)CreateComponent(index, typeof(UserDataGameLevelProgressListenerComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveUserDataGameLevelProgressListener() {
        RemoveComponent(GameComponentsLookup.UserDataGameLevelProgressListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherUserDataGameLevelProgressListener;

    public static Entitas.IMatcher<GameEntity> UserDataGameLevelProgressListener {
        get {
            if (_matcherUserDataGameLevelProgressListener == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.UserDataGameLevelProgressListener);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherUserDataGameLevelProgressListener = matcher;
            }

            return _matcherUserDataGameLevelProgressListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public void AddUserDataGameLevelProgressListener(IUserDataGameLevelProgressListener value) {
        var listeners = hasUserDataGameLevelProgressListener
            ? userDataGameLevelProgressListener.value
            : new System.Collections.Generic.List<IUserDataGameLevelProgressListener>();
        listeners.Add(value);
        ReplaceUserDataGameLevelProgressListener(listeners);
    }

    public void RemoveUserDataGameLevelProgressListener(IUserDataGameLevelProgressListener value, bool removeComponentWhenEmpty = true) {
        var listeners = userDataGameLevelProgressListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveUserDataGameLevelProgressListener();
        } else {
            ReplaceUserDataGameLevelProgressListener(listeners);
        }
    }
}
