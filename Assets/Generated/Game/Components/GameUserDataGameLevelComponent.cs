//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Core.UserData.UserDataGameLevelComponent userDataGameLevel { get { return (Core.UserData.UserDataGameLevelComponent)GetComponent(GameComponentsLookup.UserDataGameLevel); } }
    public bool hasUserDataGameLevel { get { return HasComponent(GameComponentsLookup.UserDataGameLevel); } }

    public void AddUserDataGameLevel(int newValue) {
        var index = GameComponentsLookup.UserDataGameLevel;
        var component = (Core.UserData.UserDataGameLevelComponent)CreateComponent(index, typeof(Core.UserData.UserDataGameLevelComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceUserDataGameLevel(int newValue) {
        var index = GameComponentsLookup.UserDataGameLevel;
        var component = (Core.UserData.UserDataGameLevelComponent)CreateComponent(index, typeof(Core.UserData.UserDataGameLevelComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveUserDataGameLevel() {
        RemoveComponent(GameComponentsLookup.UserDataGameLevel);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherUserDataGameLevel;

    public static Entitas.IMatcher<GameEntity> UserDataGameLevel {
        get {
            if (_matcherUserDataGameLevel == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.UserDataGameLevel);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherUserDataGameLevel = matcher;
            }

            return _matcherUserDataGameLevel;
        }
    }
}
