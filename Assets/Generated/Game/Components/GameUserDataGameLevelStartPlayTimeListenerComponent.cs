//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public UserDataGameLevelStartPlayTimeListenerComponent userDataGameLevelStartPlayTimeListener { get { return (UserDataGameLevelStartPlayTimeListenerComponent)GetComponent(GameComponentsLookup.UserDataGameLevelStartPlayTimeListener); } }
    public bool hasUserDataGameLevelStartPlayTimeListener { get { return HasComponent(GameComponentsLookup.UserDataGameLevelStartPlayTimeListener); } }

    public void AddUserDataGameLevelStartPlayTimeListener(System.Collections.Generic.List<IUserDataGameLevelStartPlayTimeListener> newValue) {
        var index = GameComponentsLookup.UserDataGameLevelStartPlayTimeListener;
        var component = (UserDataGameLevelStartPlayTimeListenerComponent)CreateComponent(index, typeof(UserDataGameLevelStartPlayTimeListenerComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceUserDataGameLevelStartPlayTimeListener(System.Collections.Generic.List<IUserDataGameLevelStartPlayTimeListener> newValue) {
        var index = GameComponentsLookup.UserDataGameLevelStartPlayTimeListener;
        var component = (UserDataGameLevelStartPlayTimeListenerComponent)CreateComponent(index, typeof(UserDataGameLevelStartPlayTimeListenerComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveUserDataGameLevelStartPlayTimeListener() {
        RemoveComponent(GameComponentsLookup.UserDataGameLevelStartPlayTimeListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherUserDataGameLevelStartPlayTimeListener;

    public static Entitas.IMatcher<GameEntity> UserDataGameLevelStartPlayTimeListener {
        get {
            if (_matcherUserDataGameLevelStartPlayTimeListener == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.UserDataGameLevelStartPlayTimeListener);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherUserDataGameLevelStartPlayTimeListener = matcher;
            }

            return _matcherUserDataGameLevelStartPlayTimeListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public void AddUserDataGameLevelStartPlayTimeListener(IUserDataGameLevelStartPlayTimeListener value) {
        var listeners = hasUserDataGameLevelStartPlayTimeListener
            ? userDataGameLevelStartPlayTimeListener.value
            : new System.Collections.Generic.List<IUserDataGameLevelStartPlayTimeListener>();
        listeners.Add(value);
        ReplaceUserDataGameLevelStartPlayTimeListener(listeners);
    }

    public void RemoveUserDataGameLevelStartPlayTimeListener(IUserDataGameLevelStartPlayTimeListener value, bool removeComponentWhenEmpty = true) {
        var listeners = userDataGameLevelStartPlayTimeListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveUserDataGameLevelStartPlayTimeListener();
        } else {
            ReplaceUserDataGameLevelStartPlayTimeListener(listeners);
        }
    }
}
