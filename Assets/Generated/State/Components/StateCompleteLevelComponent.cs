//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class StateEntity {

    static readonly Core.ApplicationStates.CompleteLevelComponent completeLevelComponent = new Core.ApplicationStates.CompleteLevelComponent();

    public bool transitionCompleteLevel {
        get { return HasComponent(StateComponentsLookup.CompleteLevel); }
        set {
            if (value != transitionCompleteLevel) {
                var index = StateComponentsLookup.CompleteLevel;
                if (value) {
                    var componentPool = GetComponentPool(index);
                    var component = componentPool.Count > 0
                            ? componentPool.Pop()
                            : completeLevelComponent;

                    AddComponent(index, component);
                } else {
                    RemoveComponent(index);
                }
            }
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class StateMatcher {

    static Entitas.IMatcher<StateEntity> _matcherCompleteLevel;

    public static Entitas.IMatcher<StateEntity> CompleteLevel {
        get {
            if (_matcherCompleteLevel == null) {
                var matcher = (Entitas.Matcher<StateEntity>)Entitas.Matcher<StateEntity>.AllOf(StateComponentsLookup.CompleteLevel);
                matcher.componentNames = StateComponentsLookup.componentNames;
                _matcherCompleteLevel = matcher;
            }

            return _matcherCompleteLevel;
        }
    }
}
